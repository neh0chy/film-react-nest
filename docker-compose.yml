services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "3000:3000"
    networks:
      - film_network
    depends_on:
      - postgres
    env_file:
      - backend/.env
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    volumes:
      - frontend_volume:/app/dist
    networks:
      - film_network
    env_file:
      - frontend/.env

  postgres:
    image: postgres
    container_name: postgres
    networks:
      - film_network
    volumes:
      - ./backend/test/postgres_initial_stub.sql:/docker-entrypoint-initdb.d/postgres_initial_stub.sql
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - backend/.env
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    depends_on:
      - postgres
    ports:
      - "8080:80"
    networks:
      - film_network
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    env_file:
      - backend/.env
    restart: unless-stopped

  webserver:
    image: nginx
    ports:
      - 80:80
      - 443:443
    networks:
      - film_network
    volumes:
      - frontend_volume:/var/www/frontend:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/letsencrypt/:ro
    restart: unless-stopped

  certbot:
    image: certbot/certbot:latest
    networks:
      - film_network
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

volumes:
  postgres_data:
    name: postgres_data
    external: false
  pgadmin_data:
    name: pgadmin_data
    external: false
  frontend_volume:
    name: frontend_volume
    external: false

networks:
  film_network:
